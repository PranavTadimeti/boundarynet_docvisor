{"version":3,"sources":["ROISelector.tsx","index.tsx"],"names":["ROISelector","props","onChange","_","percentCrop","state","crop","height","y","setState","onComplete","newCrop","width","img","imgRef","current","scaleX","naturalWidth","finalCrop","Math","round","x","args","console","log","Streamlit","setComponentValue","onImageLoaded","unit","React","createRef","src","this","disabled","StreamlitComponentBase","withStreamlitConnection","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"yRAUMA,G,wDACL,WAAYC,GAAa,IAAD,8BACjB,cAAMA,IAYbC,SAAW,SAACC,EAAOC,GAEf,WAAY,EAAKC,MAAMC,OACxBF,EAAYG,OAAS,IACrBH,EAAYI,EAAI,GAElB,EAAKC,SAAL,2BAAkB,EAAKJ,OAAvB,IAA8BC,KAAMF,MAnBb,EAwBxBM,WAAa,SAACC,GAEZ,GAAIA,EAAQC,MAAO,CAClB,IAAIC,EAAM,EAAKR,MAAMS,OAAOC,QACxBC,EAASH,EAAII,aAAcJ,EAAID,MAE/BM,EAAY,CAAC,SAAYC,KAAKC,MAAMT,EAAQU,EAAIL,GAAS,OAAUG,KAAKC,OAAOT,EAAQU,EAAIV,EAAQC,OAAOI,GAAS,IAAM,EAAKf,MAAMqB,KAAX,KAC7HC,QAAQC,IAAI,eAAgBN,GAAY,EAAKjB,MAAMqB,KAAX,WACxCG,IAAUC,kBAAkBR,KAhCP,EAoCvBS,cAAgB,SAACd,GAEhB,EAAKR,MAAMS,OAAOC,QAAUF,GAnCvB,EAAKR,MAAQ,CAClBC,KAAM,CACLsB,KAAM,KAIPd,OAASe,IAAMC,aATO,E,0CAyCxB,WAEC,OACC,6BACA,kBAAC,IAAD,CAAWC,IAAKC,KAAK/B,MAAMqB,KAAX,QAA4BhB,KAAM0B,KAAK3B,MAAMC,KAC1D2B,UAAWD,KAAK/B,MAAMqB,KAAX,UACRK,cAAeK,KAAKL,cACvBzB,SAAU8B,KAAK9B,SACfQ,WAAYsB,KAAKtB,kB,GAlDGwB,MAyDXC,cAAwBnC,GC9DvCoC,IAASC,OACP,kBAAC,IAAMC,WAAP,KACI,kBAAC,EAAD,OAEJC,SAASC,eAAe,W","file":"static/js/main.94edcac7.chunk.js","sourcesContent":["import {Streamlit, StreamlitComponentBase, withStreamlitConnection,} from \"streamlit-component-lib\"\nimport React from \"react\"\nimport ReactCrop from 'react-image-crop'\nimport 'react-image-crop/dist/ReactCrop.css'\n\ninterface State {\n\tcrop: any\n\timgRef: any\n}\n\nclass ROISelector extends StreamlitComponentBase<State> {\n\tconstructor(props: any) {\n        super(props);\n\n        this.state = {\n\t\t\tcrop: {\n\t\t\t\tunit: \"%\"\n\t\t\t\t// default crop width and height you can comment two for manual crop\n\t\t\t\t// width: 100,\n\t\t\t},\n\t\t\timgRef : React.createRef()\n        };\n    }\n\n\tonChange = (_: any,percentCrop: any) => {\n\t\t// console.log(\"onChange\")\n\t\tif(\"height\" in this.state.crop){\n\t\t\t\tpercentCrop.height = 100;\n\t\t\t\tpercentCrop.y = 0;\n\t\t}\n\t\tthis.setState({...this.state, crop: percentCrop });\n\n\t  };\n\n\n\tonComplete = (newCrop: any) => {\n\t\t\t// console.log(\"onComplete\")\n\t\t\tif (newCrop.width) {\n\t\t\t\tlet img = this.state.imgRef.current;\n\t\t\t\tlet scaleX = img.naturalWidth/ img.width;\n\t\t\t\t\n\t\t\t\tlet finalCrop = {\"start_px\": Math.round(newCrop.x * scaleX), \"end_px\": Math.round((newCrop.x + newCrop.width)*scaleX), \"key\":this.props.args[\"key\"]};\n\t\t\t\tconsole.log(\"CROPPED ROI:\", finalCrop, !this.props.args[\"isEnabled\"]);\n\t\t\t\tStreamlit.setComponentValue(finalCrop)\n\t\t\t}\n\t};\n\n\t onImageLoaded = (img: any)=> {\n\t \t // console.log(\"onImageLoaded\")\n\t\t this.state.imgRef.current = img\n\t };\n\n\trender() {\n\n\t\treturn (\n\t\t\t<div>\n\t\t\t<ReactCrop src={this.props.args[\"img_b64\"]} crop={this.state.crop}\n\t\t\t\t\t\tdisabled={!this.props.args[\"isEnabled\"]}\n\t\t\t\t\t   \tonImageLoaded={this.onImageLoaded}\n\t\t\t\t\t\tonChange={this.onChange}\n\t\t\t\t\t\tonComplete={this.onComplete}\n\t\t\t\t\t\t/>\n\t\t\t</div>\n\t\t)\n\t}\n}\n\nexport default withStreamlitConnection(ROISelector)\n","import React from \"react\"\nimport ReactDOM from \"react-dom\"\nimport ROISelector from \"./ROISelector\"\n\n\nReactDOM.render(\n  <React.StrictMode>\n      <ROISelector/>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n)\n"],"sourceRoot":""}